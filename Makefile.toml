[env]
IMAGE = "disk.img"

[tasks.run]
dependencies = ["build", "prepare-ovmf"]
script = '''
qemu-system-x86_64 \
  -drive if=pflash,format=raw,file=./uefi-firmware/OVMF_CODE.fd \
  -drive if=pflash,format=raw,file=./uefi-firmware/OVMF_VARS.fd \
  -drive format=raw,media=disk,index=0,file=${IMAGE} \
  -device isa-debug-exit -monitor stdio
'''

[tasks.build.run_task]
name = ["disk-init", "mount", "place-files"]
cleanup_task = "umount"
fork = true

[tasks.disk-init]
script = '''
qemu-img create -f raw "${IMAGE}" 200M
mkfs.fat -n "MANDARIN OS" -s 2 -f 2 -F 32 -R 32 "${IMAGE}"
'''
[tasks.mount]
script = '''
mkdir -p ./mnt
sudo mount -o loop "${IMAGE}" ./mnt
'''
[tasks.place-files]
dependencies = [
  { name = "copy-efi", path = "bootloader" },
  { name = "build", path = "kernel" },
]
script = '''
sudo mkdir -p ./mnt/EFI/BOOT
sudo cp ./bootloader/BOOTX64.EFI ./mnt/EFI/BOOT/BOOTX64.EFI
sudo cp ./kernel/kernel.elf ./mnt/kernel.elf
'''
[tasks.umount]
script = "sudo umount ./mnt && rmdir ./mnt"

[tasks.prepare-ovmf.condition]
files_not_exist = [
  "${CARGO_MAKE_WORKING_DIRECTORY}/uefi-firmware/OVMF_CODE.fd",
  "${CARGO_MAKE_WORKING_DIRECTORY}/uefi-firmware/OVMF_VARS.fd",
]
[tasks.prepare-ovmf]
script = '''
mkdir -p ./uefi-firmware
cp /usr/share/OVMF/OVMF_CODE.fd /usr/share/OVMF/OVMF_VARS.fd ./uefi-firmware/
'''

[tasks.check]
dependencies = [
  { name = "check", path = "bootloader" },
  { name = "check", path = "kernel" },
]

[tasks.clean]
dependencies = [
  { name = "clean", path = "bootloader" },
  { name = "clean", path = "kernel" },
]
ignore_errors = true
script = '''
rm -r ./uefi-firmware ${IMAGE}
'''

[config]
skip_core_tasks = true

[tasks.default]
alias = "build"
